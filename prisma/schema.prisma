// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}

model User {
  id    String  @id @default(cuid())
  name  String
  email String  @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role  Role
  Progress Progress[]
}

model Subject {
  id          String   @id @default(cuid())
  name        String
  description String?
  Topics      Topic[]
  Progress    Progress[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Topic {
  id          String   @id @default(cuid())
  subjectId   String
  title       String
  description String?
  videoUrl    String
  subject     Subject  @relation(fields: [subjectId], references: [id], onDelete: Cascade)
  Progress    Progress[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Progress {
  id         String  @id @default(cuid())
  userId     String
  subjectId  String
  topicId    String
  isCompleted Boolean @default(false)

  user       User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  subject    Subject @relation(fields: [subjectId], references: [id], onDelete: Cascade)
  topic      Topic   @relation(fields: [topicId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
